Collections: a group of object represented as a single unit.

Collections Frameworks is an Interface that consists of 3 interfaces.
List
Set
Queue

LIST INTEFACE: collection that allows for duplicate elements and preserves the order of elements.
The classes that implement the LIST interface are:
1. ArrayList
2. LinkedList
3. Vector


WHY DO WE NEED COLLECTIONS
to manipulate data
Arrays are limited in size and do not have methods to manipulate data with.
Arrays are a static data structure while arrayList are dynamic data structure.

Wrapper Classes: class that converts non primitive types into object types
8 wrapper classes - wraps your primitive variable and now represented in the form of object
int = Integer
char = Character
boolean = Boolean
byte = Byte

Why do we need Wrapper classes?
to store converted primitive types inside our collections

Iterator is an interface that helps iterate/traverse through collections (List, Set, Queue)
through each element inside the collection.

Iterator has 3 methods
hasNext() - > returns boolean if there is a next element in the collection

next(); -> returns the next element

remove(); -> removes the next element


ARRAYLIST vs LINKEDLIST

1.
Arraylist is a dynamic array 

LinkedList uses a doubly linked list

2.
ArrayList is the best option for retrieving 

while LinkedList is best choice
for adding and removing operations


ArrayList vs Array

1. Array is fixed in size
ArrayList is a dynamic data structure

2. Array contains primitives and non primitives
ArrayList contains only objects - with the help of wrapper classes

3. length - array and size - arrayList